'''请你来实现一个 atoi 函数，使其能将字符串转换成整数。

首先，该函数会根据需要丢弃无用的开头空格字符，直到寻找到第一个非空格的字符为止。

当我们寻找到的第一个非空字符为正或者负号时，则将该符号与之后面尽可能多的连续数字组合起来，作为该整数的正负号；假如第一个非空字符是数字，
则直接将其与之后连续的数字字符组合起来，形成整数。

该字符串除了有效的整数部分之后也可能会存在多余的字符，这些字符可以被忽略，它们对于函数不应该造成影响。

注意：假如该字符串中的第一个非空格字符不是一个有效整数字符、字符串为空或字符串仅包含空白字符时，则你的函数不需要进行转换。

在任何情况下，若函数不能进行有效的转换时，请返回 0。

说明：

假设我们的环境只能存储 32 位大小的有符号整数，那么其数值范围为 [−231,  231 − 1]。如果数值超过这个范围，qing返回  INT_MAX (231 − 1) 或
 INT_MIN (−231) 。
'''

str="+1"
str1=str.strip()#去头尾的空白字符
#print(str1)
n=len(str1)
if n==0:#检测是否字符串为空或字符串仅包含空白字符
    print(0)
        
#建一个空字符串，保存需要的数字字符
#建两个for循环，第一个for循环检测至第一个－号或数字，记录该字符下标k
#第二个for循环从k+1检测至第一个非数字字符，并套用一个while循环保证数字范围
#还需要验证是否只有一个'-'号'
        
str2=''
if str1[0].isdigit() or str1[0]=='-' or str1[0]=='+':
    str2+=str1[0]
    #print(str2)
else:
    print(0)
            
for j in range(1,n):
    if str1[j].isdigit():
        str2+=str1[j]
        #print(str2)
    else:
        break#假如只有一个'-'号就break了
    #if int(str2)<-pow(2,31) or int(str2)>pow(2,31)-1:
        #break
        
if str2 is '-' or str2 is '+':
    print(0)
else:
    if int(str2)<-pow(2,31):
        print(-pow(2,31))
    elif int(str2)>pow(2,31)-1:
        print(pow(2,31)-1)
    else:
        print(int(str2))